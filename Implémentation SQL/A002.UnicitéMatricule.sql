USE [StagiairesDB]
GO

/* Pour éviter les problèmes éventuels de perte de données, passez attentivement ce script en revue avant de l'exécuter en dehors du contexte du Concepteur de bases de données.*/
BEGIN TRANSACTION
SET QUOTED_IDENTIFIER ON
SET ARITHABORT ON
SET NUMERIC_ROUNDABORT OFF
SET CONCAT_NULL_YIELDS_NULL ON
SET ANSI_NULLS ON
SET ANSI_PADDING ON
SET ANSI_WARNINGS ON
COMMIT
BEGIN TRANSACTION
GO
ALTER TABLE dbo.STAGIAIRE
	DROP CONSTRAINT FK_STAGIAIR_SPECIALIS_PERSONNE
GO
ALTER TABLE dbo.FORMATEUR
	DROP CONSTRAINT FK_FORMATEUR_PERSONNE
GO
ALTER TABLE dbo.PERSONNE SET (LOCK_ESCALATION = TABLE)
GO
COMMIT
BEGIN TRANSACTION
GO
CREATE TABLE dbo.Tmp_STAGIAIRE
(
	IDPERSONNE int NOT NULL IDENTITY (1, 1),
	DATENAISSANCE date NOT NULL,
	MATRICULESTAGIAIRE char(8) NOT NULL
)  ON [PRIMARY]
GO
ALTER TABLE dbo.Tmp_STAGIAIRE SET (LOCK_ESCALATION = TABLE)
GO
SET IDENTITY_INSERT dbo.Tmp_STAGIAIRE ON
GO
IF EXISTS(SELECT *
FROM dbo.STAGIAIRE)
	 EXEC('INSERT INTO dbo.Tmp_STAGIAIRE (IDPERSONNE, DATENAISSANCE, MATRICULESTAGIAIRE)
		SELECT IDPERSONNE, DATENAISSANCE, MATRICULESTAGIAIRE FROM dbo.STAGIAIRE WITH (HOLDLOCK TABLOCKX)')
GO
SET IDENTITY_INSERT dbo.Tmp_STAGIAIRE OFF
GO
ALTER TABLE dbo.PARTICIPER_A
	DROP CONSTRAINT FK__PARTICI__PARTICIP_STAGIAIR
GO
DROP TABLE dbo.STAGIAIRE
GO
EXECUTE sp_rename N'dbo.Tmp_STAGIAIRE', N'STAGIAIRE', 'OBJECT' 
GO
ALTER TABLE dbo.STAGIAIRE ADD CONSTRAINT
	PK_STAGIAIRE PRIMARY KEY CLUSTERED 
	(
	IDPERSONNE
	) WITH( STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]

GO
ALTER TABLE dbo.STAGIAIRE ADD CONSTRAINT
	FK_STAGIAIR_SPECIALIS_PERSONNE FOREIGN KEY
	(
	IDPERSONNE
	) REFERENCES dbo.PERSONNE
	(
	IDPERSONNE
	) ON UPDATE  NO ACTION 
	 ON DELETE  NO ACTION 
	
GO
COMMIT
BEGIN TRANSACTION
GO
ALTER TABLE dbo.PARTICIPER_A ADD CONSTRAINT
	FK__PARTICI__PARTICIP_STAGIAIR FOREIGN KEY
	(
	IDPERSONNE
	) REFERENCES dbo.STAGIAIRE
	(
	IDPERSONNE
	) ON UPDATE  NO ACTION 
	 ON DELETE  NO ACTION 
	
GO
ALTER TABLE dbo.PARTICIPER_A SET (LOCK_ESCALATION = TABLE)
GO
COMMIT
BEGIN TRANSACTION
GO
CREATE TABLE dbo.Tmp_FORMATEUR
(
	IDPERSONNE int NOT NULL IDENTITY (1, 1),
	MATRICULEFORMATEUR char(7) NOT NULL
)  ON [PRIMARY]
GO
ALTER TABLE dbo.Tmp_FORMATEUR SET (LOCK_ESCALATION = TABLE)
GO
SET IDENTITY_INSERT dbo.Tmp_FORMATEUR ON
GO
IF EXISTS(SELECT *
FROM dbo.FORMATEUR)
	 EXEC('INSERT INTO dbo.Tmp_FORMATEUR (IDPERSONNE, MATRICULEFORMATEUR)
		SELECT IDPERSONNE, MATRICULEFORMATEUR FROM dbo.FORMATEUR WITH (HOLDLOCK TABLOCKX)')
GO
SET IDENTITY_INSERT dbo.Tmp_FORMATEUR OFF
GO
ALTER TABLE dbo.OFFREFORMATION
	DROP CONSTRAINT FK_OFFREFORMATION_FORMATEUR
GO
DROP TABLE dbo.FORMATEUR
GO
EXECUTE sp_rename N'dbo.Tmp_FORMATEUR', N'FORMATEUR', 'OBJECT' 
GO
ALTER TABLE dbo.FORMATEUR ADD CONSTRAINT
	PK_FORMATEUR PRIMARY KEY CLUSTERED 
	(
	IDPERSONNE
	) WITH( STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]

GO
ALTER TABLE dbo.FORMATEUR ADD CONSTRAINT
	FK_FORMATEUR_PERSONNE FOREIGN KEY
	(
	IDPERSONNE
	) REFERENCES dbo.PERSONNE
	(
	IDPERSONNE
	) ON UPDATE  NO ACTION 
	 ON DELETE  NO ACTION 
	
GO
COMMIT
BEGIN TRANSACTION
GO
ALTER TABLE dbo.OFFREFORMATION ADD CONSTRAINT
	FK_OFFREFORMATION_FORMATEUR FOREIGN KEY
	(
	IDResponsable
	) REFERENCES dbo.FORMATEUR
	(
	IDPERSONNE
	) ON UPDATE  NO ACTION 
	 ON DELETE  NO ACTION 
	
GO
ALTER TABLE dbo.OFFREFORMATION SET (LOCK_ESCALATION = TABLE)
GO
COMMIT
GO

CREATE TRIGGER Stagiaire_Speciality_Check ON STAGIAIRE
AFTER INSERT AS
BEGIN
	IF (SELECT COUNT(*)
	FROM INSERTED) > 1
		BEGIN;
		THROW 66666, 'Insertion invalide', 1;
		ROLLBACK TRANSACTION;
		RETURN
	END;
	IF (SELECT IDPERSONNE
	FROM INSERTED) = (SELECT IDPERSONNE
	FROM FORMATEUR)
		BEGIN;
		THROW 66667, 'ID présente dans la table FORMATEUR', 1;
		ROLLBACK TRANSACTION;
		RETURN
	END;
END;
GO

CREATE TRIGGER Formateur_Speciality_Check ON FORMATEUR
AFTER INSERT AS
BEGIN
	IF (SELECT COUNT(*)
	FROM INSERTED) > 1
		BEGIN;
		THROW 66666, 'Insertion invalide', 1;
		ROLLBACK TRANSACTION;
		RETURN
	END;
	IF (SELECT IDPERSONNE
	FROM INSERTED) = (SELECT IDPERSONNE
	FROM STAGIAIRE)
		BEGIN;
		THROW 66667, 'ID présente dans la table STAGIAIRE', 1;
		ROLLBACK TRANSACTION;
		RETURN
	END;
END;
GO